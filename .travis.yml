# It may be useful to test whether BDD tests work on different environments.
# Developers might run the tests on different OS, but it can also help find errors
# on different OS. For example, Windows comes with its own SSL dependencies while
# on Linux we use OpenSSL.
os:
  - linux
  - osx
  - windows
language: rust
cache: cargo

# Run the script on stable, beta and nightly channels. We can therefore
# detect any errors for future releases. This can help us get to know better
# the code updates we will need to make.
rust:
  - stable
  - beta
  - nightly

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true

before_script:
  - rustup component add clippy rustfmt
  - cargo install --force cargo-audit
  - cargo generate-lockfile

script:
  # Enforce syntax : great for a team
  - cargo fmt --all -- --check
  # Fail when encountering warnings
  - cargo clippy -- -D warnings
  - cargo build
  # unit tests of the library
  - cargo test --lib
  # Check BDD tests compilation : this will avoid to run tests over the real API.
  # it's just for continuous integration. To run tests it's better to configure
  # specific jobs with a cron / trigger.
  - cargo test --no-run
  # Check vulnerabilities in dependencies
  - cargo audit
